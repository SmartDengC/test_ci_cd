<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <security:http >
        <!--放行静态资源-->
        <security:intercept-url pattern="/static/**" access="permitAll()"/>
        <!--拦截的partern是拦截的请求,不是资源地址!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!-->
        <security:intercept-url pattern="/dataDisplay/**" access="permitAll()"></security:intercept-url>
        <security:intercept-url pattern="/userConfig/checkUsername" access="permitAll()"></security:intercept-url>
        <security:intercept-url pattern="/userConfig/checkInviteCode" access="permitAll()"></security:intercept-url>
        <security:intercept-url pattern="/userConfig/checkEmail" access="permitAll()"></security:intercept-url>
        <security:intercept-url pattern="/userConfig/addMember" access="permitAll()"></security:intercept-url>
        <security:intercept-url pattern="/userConfig/sendCode" access="permitAll()"></security:intercept-url>
        <security:intercept-url pattern="/userConfig/checkCode" access="permitAll()"></security:intercept-url>
        <security:intercept-url pattern="/userConfig/savePwd" access="permitAll()"></security:intercept-url>
        <security:intercept-url pattern="/userConfig/sendInviteCode" access="hasRole('ROLE_sendInviteCode')"></security:intercept-url>
        <security:intercept-url pattern="/userConfig/list" access="hasRole('ROLE_list')"></security:intercept-url>
        <security:intercept-url pattern="/scoreIntegration/**" access="hasRole('ROLE_scoreIntegration')"></security:intercept-url>
        <security:intercept-url pattern="/importFormatField/**" access="hasRole('ROLE_importFormatField')"></security:intercept-url>
        <security:intercept-url pattern="/dataImport/**" access="hasRole('ROLE_dataImport')"></security:intercept-url>
        <security:intercept-url pattern="/basicConfig/**" access="hasRole('ROLE_basicConfig')"></security:intercept-url>
        <security:intercept-url pattern="/dataExport/**" access="hasRole('ROLE_dataExport')"></security:intercept-url>


        <!--使用异步处理登陆成功和失败的时候的处理   登录页面的地址为login-page 登录表单的提交地址为login-processing-url-->
        <security:form-login  login-processing-url="/login"
                              login-page="/loginpage"
                              authentication-success-handler-ref="myAuthenticationSuccessHandler"
                              authentication-failure-handler-ref="myAuthenticationFailureHandler"/>
        <!--开启注销 清除session--><!-- 取消后台的页面跳转功能 logout-success-url="/index.html"-->
        <security:logout  invalidate-session="true" logout-url="/j_spring_security_logout"/>
        <!--权限不足的时候放回提示页面,有待实现的错误页面-->
        <!--<security:access-denied-handler error-page="/error" ></security:access-denied-handler>-->

        <security:csrf disabled="true"/>
        <!--跨域配置-->
        <security:cors ></security:cors>
        <!--remember-me功能 token-validity-seconds时间  单位秒-->
        <security:remember-me token-repository-ref="jdbcTokenRepository" token-validity-seconds="3600"/>
    </security:http>
    <!--认证管理器配置 ，认证信息提供方式（用户名 密码 当前用户权限）-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="myUserDetailService">
            <!--使用加密算法对用户的密码进行加密-->
            <security:password-encoder ref="passwordEncode"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="myUserDetailService" class="com.security.MyUserDetailService"/>
    <bean id="passwordEncode" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <bean id="myAuthenticationFailureHandler" class="com.security.MyAuthenticationFailureHandler"/>
    <bean id="myAuthenticationSuccessHandler" class="com.security.MyAuthenticationSuccessHandler"/>
    <!--remember-me的bean配置-->
    <bean id="jdbcTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

</beans>